name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  security-events: write

jobs:
  validate:
    name: Validate Code and Configuration
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y shellcheck
        
    - name: Validate shell scripts
      run: |
        echo "🔍 Validating shell script syntax..."
        bash -n up.sh
        bash -n down.sh
        bash -n build-webapp.sh
        bash -n backup.sh
        bash -n upgrade.sh
        bash -n resources/post-create.sh
        bash -n resources/minecraft-wrapper.sh
        
        echo "🔍 Running ShellCheck linter..."
        shellcheck up.sh down.sh build-webapp.sh backup.sh upgrade.sh resources/*.sh scripts/*.sh
        
    - name: Validate Docker configuration
      run: |
        echo "🐳 Validating Dockerfile..."
        test -f Dockerfile
        grep -q "FROM" Dockerfile
        
        echo "🐳 Validating Docker Compose configuration..."
        cp sample.env .env
        sed -i 's/YOUR_UUID_HERE/test-uuid-1234/g' .env
        sed -i 's/YOUR_USERNAME_HERE/TestPlayer/g' .env
        docker compose config > /dev/null
        rm .env
        
        echo "🐳 Testing Docker build..."
        docker build --target base -t minecraft-server-test .
        
    - name: Validate environment configuration
      run: |
        echo "⚙️ Validating sample.env format..."
        test -f sample.env
        grep -q "MINECRAFT_VERSION=" sample.env
        grep -q "OPERATOR_UUID=" sample.env
        grep -q "OPERATOR_NAME=" sample.env
        grep -q "SERVER_MOTD=" sample.env
        
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '21'
        
    - name: Build web application
      run: |
        echo "🌐 Building web application..."
        cd web-app
        ./gradlew build
        echo "✓ Web application built successfully"
        ls -lh build/libs/
        
    - name: Run web application tests
      run: |
        echo "🧪 Running web application tests..."
        cd web-app
        ./gradlew test
        echo "✓ All tests passed"
        
    - name: Validate documentation
      run: |
        echo "📚 Validating documentation..."
        test -f README.md
        grep -q "# Open Minecraft Server Infrastructure" README.md  
        test -f LICENSE
        
    - name: Test graceful shutdown functionality
      run: |
        echo "🧪 Testing graceful shutdown functionality..."
        ./scripts/test-graceful-shutdown.sh
        
  security-scan:
    name: Security Scanning
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@0.20.0
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
      continue-on-error: true
        
    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'
      continue-on-error: true